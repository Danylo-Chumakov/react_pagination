{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageClick","page","className","href","onClick","Array","from","length","_","index","itemsPerPageOptions","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","items","to","numbers","n","push","getNumbers","map","min","id","onChange","e","value","Number","target","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAkB,SAACC,GACvBL,EAAaK,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBP,EAAoB,WAAa,IAA7D,SACE,mBACEO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,kBAAMJ,EAAgBL,EAAc,IAJ/C,oBAUDU,MAAMC,KAAK,CAAEC,OAAQV,IAAc,SAACW,EAAGC,GAAJ,OAClC,oBAEEP,UAAS,oBAAeP,IAAgBc,EAAQ,EAAI,SAAW,IAFjE,SAIE,mBACEP,UAAU,YACVC,KAAI,WAAMM,EAAQ,GAClBL,QAAS,kBAAMJ,EAAgBS,EAAQ,IAHzC,SAKGA,EAAQ,KARNA,MAaT,oBAAIP,UAAS,oBAAeP,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACEK,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAAS,kBAAMJ,EAAgBL,EAAc,IAJ/C,wBC7CFe,EAAsB,CAAC,EAAG,EAAG,GAAI,IAK1BC,EAA0B,WACrC,IACA,EAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAASF,EAAoB,IAArE,mBAAOI,EAAP,KAAqBC,EAArB,KAWMC,ECxBD,SAAoBV,EAAcW,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIb,EAAMa,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDiBOG,CAAW,EAbN,IAaqBC,KAAI,SAACH,GAAD,qBAAeA,MAE3D,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEGP,EAFH,SAIGG,KAAKyB,KAAK5B,EAAc,GAAKmB,EAAe,EAvBhC,IAmBf,IAMGhB,KAAKyB,IAAI5B,EAAcmB,EAzBX,IAmBf,KAnBe,GAmBf,OAYA,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,SAAU,SAACC,GAAD,OA7BcC,EA6BkBC,OAAOF,EAAEG,OAAOF,OA5BlEZ,EAAgBY,QAChBd,EAAe,GAFgB,IAACc,GA8BxBA,MAAOb,EALT,SAOGJ,EAAoBY,KAAI,SAACQ,GAAD,OACvB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAtDa,GAuDbC,QAASoB,EACTnB,YAAaA,EACbC,aArDmB,SAACK,GACxBY,EAAeZ,MAuDb,6BACGe,EAAMgB,OAAOrC,EAAc,GAC1BmB,EAAcnB,EAAcmB,GAAcQ,KAAI,SAACW,EAAMxB,GAAP,OAE9C,aADA,CACA,MAAgB,UAAQ,OAAxB,SACGwB,GADMxB,YExEnByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.22d39f09.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageClick = (page: number) => {\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageClick(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {Array.from({ length: totalPages }, (_, index) => (\n        <li\n          key={index}\n          className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}\n        >\n          <a\n            className=\"page-link\"\n            href={`#${index + 1}`}\n            onClick={() => handlePageClick(index + 1)}\n          >\n            {index + 1}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => handlePageClick(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst itemsPerPageOptions = [3, 5, 10, 20];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface AppProps {}\n\nexport const App: React.FC<AppProps> = () => {\n  const totalItems = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(itemsPerPageOptions[0]);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleItemsPerPageChange = (value: number) => {\n    setItemsPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const items = getNumbers(1, totalItems).map((n) => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {currentPage}\n        (items\n        {Math.min((currentPage - 1) * itemsPerPage + 1, totalItems)}\n        -\n        {Math.min(currentPage * itemsPerPage, totalItems)}\n        of\n        {totalItems}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n            value={itemsPerPage}\n          >\n            {itemsPerPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.slice((currentPage - 1)\n        * itemsPerPage, currentPage * itemsPerPage).map((item, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={index} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}